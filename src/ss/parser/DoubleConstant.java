package ss.parser;

import ss.runtime.SSDouble;
import ss.runtime.SSObject;

/*******************************************************************************
 * @author lukasz.bownik@gmail.com
 ******************************************************************************/
public final class DoubleConstant implements Expression {

    /****************************************************************************
     * 
    ****************************************************************************/
    public DoubleConstant(final Double value) {

        this.value = value;
    }

    /****************************************************************************
     * 
    ****************************************************************************/
    @Override
    public Double value() {

        return this.value;
    }

    /****************************************************************************
     * 
    ****************************************************************************/
    @Override
    public String toString() {

        return this.value.toString();
    }

    /****************************************************************************
     * 
    ****************************************************************************/
    @Override
    public int hashCode() {

        return this.value.hashCode();
    }

    /****************************************************************************
     * 
    ****************************************************************************/
    @Override
    public boolean equals(final Object o) {

        return o != null && getClass() == o.getClass()
                && this.value.equals(((DoubleConstant) o).value);
    }

    /****************************************************************************
     * 
    ****************************************************************************/
    public SSObject toSSObject() {

        return new SSDouble(this.value);
    }

    /****************************************************************************
     * 
    ****************************************************************************/
    private final Double value;
}
