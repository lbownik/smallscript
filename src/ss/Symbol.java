package ss;

/*******************************************************************************
 * @author lukasz.bownik@gmail.com
 ******************************************************************************/
public final class Symbol implements Expression {

	/****************************************************************************
	 * 
	****************************************************************************/
	public Symbol(final String value) {

		this.value = value;
	}

	/****************************************************************************
	 * 
	****************************************************************************/
	@Override
	public String value() {

		return this.value;
	}

	/****************************************************************************
	 * 
	****************************************************************************/
	public boolean isVariableDeclaration() {

		return this.value.startsWith(":");
	}

	/****************************************************************************
	 * 
	****************************************************************************/
	public boolean isMethodWithArgs() {

		return this.value.endsWith(":");
	}

	/****************************************************************************
	 * 
	****************************************************************************/
	public boolean isNoArgMethod() {

		return !isMethodWithArgs();
	}
	
	/****************************************************************************
	 * 
	****************************************************************************/
	public boolean isAssignment() {

		return this.value.equals("=");
	}

	/****************************************************************************
	 * 
	****************************************************************************/
	@Override
	public String toString() {

		return "Symbol: " + this.value;
	}

	/****************************************************************************
	 * 
	****************************************************************************/
	@Override
	public int hashCode() {

		return this.value.hashCode();
	}

	/****************************************************************************
	 * 
	****************************************************************************/
	@Override
	public boolean equals(final Object o) {

		if (o != null && getClass() == o.getClass()) {
			return this.value.equals(((Symbol) o).value);
		} else {
			return false;
		}
	}

	/****************************************************************************
	 * 
	****************************************************************************/
	private final String value;
}
